# This PowerShell module includes functions to gather various system and network information.

# Function to get system information and running services.
function Get-MySystemInfoService {
    <#
    .SYNOPSIS
    Retrieves system information and running services.
    
    .DESCRIPTION
    This function retrieves system information using WMI and lists running services.
    
    .EXAMPLE
    Get-SystemInfoService
    # Retrieves system information and running services.
    #>
    
    Get-CimInstance -ClassName Win32_OperatingSystem | Select-Object -Property CSName, Caption, Version, BuildNumber, BuildType, OSType, RegisteredUser, OSArchitecture, ServicePackMajorVersion, ServicePackMinorVersion
    Get-Service | Where-Object { $_.Status -eq "Running" }
    # Retrieves system information and running services.
}

# Function to get system information using systeminfo command.
function Get-SystemInfo {
    <#
    .SYNOPSIS
    Retrieves detailed system information using the systeminfo command.
    
    .DESCRIPTION
    This function uses the systeminfo command to gather detailed information about the system,
    including the operating system, hardware, and configuration.
    
    .EXAMPLE
    Get-SystemInfo
    # Retrieves and displays detailed system information. 
    
    #>

    systeminfo
}


function Get-CurrentUserInformation {
    <#
    .SYNOPSIS
    Retrieves detailed information about the current user using the whoami command.
    
    .DESCRIPTION
    This function uses the whoami command with the /all parameter to retrieve detailed information
    about the current user, including user and group memberships, privileges, and more.
    
    .EXAMPLE
    Get-CurrentUserInformation
    # Retrieves and displays detailed information about the current user.
    
    #>

    whoami /all
}


function Get-NetworkConfiguration {
    <#
    .SYNOPSIS
    Retrieves detailed network configuration using the ipconfig command.
    
    .DESCRIPTION
    This function uses the ipconfig command with the /all parameter to retrieve detailed network
    configuration information, including IP addresses, DNS settings, subnet masks, and more.
    
    .EXAMPLE
    Get-NetworkConfiguration
    # Retrieves and displays detailed network configuration information.
    
    
    #>

    ipconfig /all
}


function Get-UserInformation {
    <#
    .SYNOPSIS
    Retrieves detailed information about a specific user account using the net user command.
    
    .DESCRIPTION
    This function uses the net user command with a specified username to retrieve detailed information
    about the user account, including properties like full name, group memberships, and more.
    
    .PARAMETER Username
    The username of the user account to retrieve information for.
    
    .EXAMPLE
    Get-UserInformation -Username "john.doe"
    # Retrieves and displays detailed information about the user account "john.doe".
    
    #>

    param (
        [string]$Username
    )

    net user $Username
}



function Get-DnsCache {
    <#
    .SYNOPSIS
    Retrieves DNS cache information using the ipconfig command.
    
    .DESCRIPTION
    This function uses the ipconfig command with the /displaydns parameter to retrieve and display
    the DNS cache information, which includes recent DNS queries and their results.
    
    .EXAMPLE
    Get-DnsCache
    # Retrieves and displays DNS cache information.
   
    
    #>

    ipconfig /displaydns
}


function Get-HostsFile {
    <#
    .SYNOPSIS
    Retrieves the content of the hosts file.
    
    .DESCRIPTION
    This function uses the Get-Content cmdlet to retrieve and display the content of the hosts file,
    which is used for hostname resolution and mapping IP addresses to hostnames.
    
    .EXAMPLE
    Get-HostsFile
    # Retrieves and displays the content of the hosts file.
    
    #>

    Get-Content -Path "C:\Windows\System32\drivers\etc\hosts"
}

function Get-InstalledPrograms {
    <#
    .SYNOPSIS
    Retrieves a list of installed programs and their versions using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_Product class to retrieve a list of
    installed programs on the system, including their names and versions.
    
    .EXAMPLE
    Get-InstalledPrograms
    # Retrieves and displays a list of installed programs and their versions.
    
    
    #>

    Get-WmiObject -Class Win32_Product | Select-Object -Property Name, Version
}


function Get-InstalledPatches {
    <#
    .SYNOPSIS
    Retrieves information about installed patches (hotfixes) using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_QuickFixEngineering class to retrieve
    information about installed patches (hotfixes) on the system, including their captions,
    descriptions, HotFix IDs, and installation dates.
    
    .EXAMPLE
    Get-InstalledPatches
    # Retrieves and displays information about installed patches.
    
    #>

    Get-WmiObject -Class Win32_QuickFixEngineering | Select-Object -Property Caption, Description, HotFixID, InstalledOn
}


function Get-RunningProcessesAndPaths {
    <#
    .SYNOPSIS
    Retrieves running processes and their paths using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_Process class to retrieve a list of
    running processes on the system, including their captions, executable paths, and command lines.
    
    .EXAMPLE
    Get-RunningProcessesAndPaths
    # Retrieves and displays running processes and their paths.
   
    
    #>

    Get-WmiObject -Class Win32_Process | Select-Object -Property Caption, ExecutablePath, CommandLine
}


function Get-ProcessDetails {
    <#
    .SYNOPSIS
    Retrieves detailed information about running processes using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_Process class to retrieve detailed
    information about running processes on the system, including their captions, command lines,
    and process IDs.
    
    .EXAMPLE
    Get-ProcessDetails
    # Retrieves and displays detailed information about running processes. 
    
    #>

    Get-WmiObject -Class Win32_Process | Select-Object -Property Caption, CommandLine, ProcessId
}

function Get-Services {
    <#
    .SYNOPSIS
    Retrieves information about running services using the Get-Service cmdlet.
    
    .DESCRIPTION
    This function uses the Get-Service cmdlet to retrieve information about running services on
    the system, including their display names, statuses, and start types.
    
    .EXAMPLE
    Get-Services
    # Retrieves and displays information about running services.
   
    
    #>

    Get-Service | Select-Object -Property DisplayName, Status, StartType
}

function Get-FirewallConfiguration {
    <#
    .SYNOPSIS
    Retrieves firewall configuration information using the netsh command.
    
    .DESCRIPTION
    This function uses the netsh command with the advfirewall parameter to retrieve and display
    the configuration information for all profiles of the Windows Firewall.
    
    .EXAMPLE
    Get-FirewallConfiguration
    # Retrieves and displays firewall configuration information for all profiles.
    
    
    #>

    netsh advfirewall show allprofiles
}


function Get-ScheduledTaskDetails {
    <#
    .SYNOPSIS
    Retrieves details of scheduled tasks using the schtasks command.
    
    .DESCRIPTION
    This function uses the schtasks command with the /query parameter and output format set to
    LIST to retrieve and display detailed information about scheduled tasks on the system.
    
    .EXAMPLE
    Get-ScheduledTaskDetails
    # Retrieves and displays details of scheduled tasks.
    
    #>

    schtasks /query /fo LIST /v
}

function Get-StartupPrograms {
    <#
    .SYNOPSIS
    Retrieves information about startup programs using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_StartupCommand class to retrieve
    information about startup programs on the system, including their captions and commands.
    
    .EXAMPLE
    Get-StartupPrograms
    # Retrieves and displays information about startup programs.
    
    #>

    Get-WmiObject -Class Win32_StartupCommand | Select-Object -Property Caption, Command
}

function Get-OnlineUsers {
    <#
    .SYNOPSIS
    Retrieves a list of online users using the query user and qwinsta commands.
    
    .DESCRIPTION
    This function uses the query user command to retrieve a list of currently logged-in users,
    and the qwinsta command to provide additional information about their sessions.
    
    .EXAMPLE
    Get-OnlineUsers
    # Retrieves and displays a list of currently logged-in users and session information.
    
    #>

    query user
    qwinsta
}


function Get-BootTime {
    <#
    .SYNOPSIS
    Retrieves the system boot time using the net statistics workstation command.
    
    .DESCRIPTION
    This function uses the net statistics workstation command to retrieve and display the system's
    boot time, providing information about when the system was last started.
    
    .EXAMPLE
    Get-BootTime
    # Retrieves and displays the system boot time.    
    
    #>

    net statistics workstation
}


function Get-RecentlyUsedItems {
    <#
    .SYNOPSIS
    Retrieves a list of recently used items using the Get-ChildItem cmdlet.
    
    .DESCRIPTION
    This function uses the Get-ChildItem cmdlet to retrieve and display a list of recently used
    items stored in the user's Recent folder, which includes shortcuts to frequently accessed files.
    
    .EXAMPLE
    Get-RecentlyUsedItems
    # Retrieves and displays a list of recently used items.
    
    #>

    Get-ChildItem "$env:APPDATA\Microsoft\Windows\Recent"
}


function Get-SmbSharedPaths {
    <#
    .SYNOPSIS
    Retrieves information about SMB shared paths using WMI.
    
    .DESCRIPTION
    This function uses the Get-WmiObject cmdlet with the Win32_Share class to retrieve information
    about SMB shared paths on the system, including their names and paths.
    
    .EXAMPLE
    Get-SmbSharedPaths
    # Retrieves and displays information about SMB shared paths.
    
    
    #>

    Get-WmiObject -Class Win32_Share | Select-Object -Property Name, Path
}


# Export the defined functions.
Export-ModuleMember -Function Get-MySystemInfoService, Get-SystemInfo, Get-CurrentUserInformation, Get-NetworkConfiguration, Get-UsersInformation, Get-DnsCache, Get-HostsFile, 
Get-InstalledPrograms, Get-InstalledPatches, Get-RunningProcessesAndPaths, Get-ProcessDetails, Get-Services, Get-FirewallConfiguration, Get-StartupPrograms, Get-OnlineUsers,
Get-BootTime, Get-RecentlyUsedItems, Get-SmbSharedPaths

# Examples of how to import and remove the module.
# Import-Module -Name .\LocalEnumerationModule.psm1
# Remove-Module -Name LocalEnumerationModule
# Get-Help cmdlet
